class Solution {
  public:
    int maxValue(vector<int>& arr) {
        int n = arr.size();
        if (n == 1) return arr[0];
        
        // Case 1: Exclude the last house
        vector<int> case1(arr.begin(), arr.end() - 1);
        int res1 = maxValueLinear(case1);
        
        // Case 2: Exclude the first house
        vector<int> case2(arr.begin() + 1, arr.end());
        int res2 = maxValueLinear(case2);
        
        // Return the maximum of the two cases
        return max(res1, res2);
    }
    
  private:
    int maxValueLinear(vector<int>& arr) {
        int n = arr.size();
        if (n == 0) return 0;
        if (n == 1) return arr[0];

        int prev2 = 0;  // dp[i-2]
        int prev1 = 0;  // dp[i-1]
        
        for (int i = 0; i < n; ++i) {
            int curr = max(arr[i] + prev2, prev1);
            prev2 = prev1;
            prev1 = curr;
        }
        
        return prev1;
    }
};
